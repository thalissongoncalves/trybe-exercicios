// Exerc√≠cio 01 - Elabore alguns c√≥digos e imprima o resultado no console usando o console.log, um para cada opera√ß√£o aritm√©tica b√°sica. Seu c√≥digo deve ter duas constantes, a e b, definidas no come√ßo com os valores que ser√£o operados. Escreva c√≥digos para:

// Adi√ß√£o (a + b)
// Subtra√ß√£o (a - b)
// Multiplica√ß√£o (a * b)
// Divis√£o (a / b)
// M√≥dulo (a % b)

// C√≥digo:

 const a = 10;
 const b = 10;

 console.log("Adi√ß√£o: " + (a + b));
 console.log("Subtra√ß√£o: " + (a - b));
 console.log("Multiplica√ß√£o: " + (a * b));
 console.log("Divis√£o: " + (a / b));
 console.log("M√≥dulo: " + (a % b));

// Exerc√≠cio 02 - Utilize if/else para escrever um c√≥digo que retorne o maior de dois n√∫meros. Defina, no come√ßo do seu c√≥digo, duas constantes com os valores que ser√£o comparados.

// C√≥digo:
 const numero1 = 30; const numero2 = 50;
 if(numero1 > numero2) {     console.log("N√∫mero 30 √© maior que N√∫mero 50"); } else {     console.log("N√∫mero 50 √© maior que N√∫mero 30"); }

// Exerc√≠cio 03 - Utilize if/else para escrever um c√≥digo que retorne o maior de tr√™s n√∫meros. Defina, no come√ßo do seu c√≥digo, tr√™s constantes com os valores que ser√£o comparados.

// C√≥digo: const numero1 = 60 const numero2 = 200 const numero3 = 130; if(numero1 > numero2 && numero3)      console.log("numero1 √© maior que numero2 e numero3") } else if(numero2 > numero3 && numero1)      console.log("numero2 √© maior que numero3 e numero1") } else      console.log("numero3 √© maior que numero2 e numero1") }

// Exerc√≠cio 04 - Utilize if/else para escrever um c√≥digo que, dado um valor recebido como par√¢metro, retorne ‚Äúpositive‚Äù se esse valor for positivo, ‚Äúnegative‚Äù se for negativo, e caso n√£o seja nem positivo e nem negativo retorne ‚Äúzero‚Äù.

// C√≥digo const parametro = "mouse" if (parametro === "teclado")     console.log("positive" } else if (parametro === "monitor")     console.log("negative" } else     console.log("0" }

// Exerc√≠cio 05 - üöÄ Utilize if/else para escrever um c√≥digo que defina tr√™s constantes com os valores dos tr√™s √¢ngulos internos de um tri√¢ngulo. Retorne true se os √¢ngulos representarem os √¢ngulos de um tri√¢ngulo e false, caso contr√°rio. Se algum √¢ngulo for inv√°lido, voc√™ deve retornar uma mensagem de erro.
// Para os √¢ngulos serem de um tri√¢ngulo v√°lido, a soma dos tr√™s deve ser 180 graus.

// Um √¢ngulo ser√° considerado inv√°lido se n√£o tiver um valor positivo.

// C√≥digo:

 const angulo1 = 60;
 const angulo2 = 60;
 const angulo3 = 60;

 if(angulo1 + angulo2 + angulo3 === 180) {
     console.log("true, os √¢ngulos formam um tri√¢ngulo v√°lido");
 } else {
     console.log("false");
 }

//Exerc√≠cio 06 - Utilize switch/case para escrever um c√≥digo que receba o nome de uma pe√ßa de xadrez e retorne os movimentos que ela faz.
// Como desafio, escreva um c√≥digo para funcionar tanto se receber o nome de uma pe√ßa com letras mai√∫sculas quanto com letras min√∫sculas, sem aumentar a quantidade de condicionais.

// Como dica, voc√™ pode pesquisar uma fun√ß√£o que faz uma string ficar com todas as letras min√∫sculas (lower case).

// Se a pe√ßa passada for inv√°lida, o c√≥digo deve retornar uma mensagem de erro.

// Exemplo: bishop (bispo) -> diagonals (diagonais)

// C√≥digo:

 let pe√ßaEscolhida = "rei";

 switch (pe√ßaEscolhida) {
     case "rei":
         console.log("O rei pode mover-se em todas as dire√ß√µes (horizontal, vertical e diagonal) somente uma casa de cada vez.");
         break;
     case "rainha":
         console.log("A rainha move-se ao longo da horizontal, vertical e diagonais mas n√£o pode pular outras pe√ßas.");
         break;
     case "bispo":
         console.log("O bispo move-se ao longo da diagonal. N√£o pode pular outras pe√ßas.");
         break;
     case "cavalo":
         console.log("√â a √∫nica pe√ßa que pode pular as outras. O movimento do cavalo √© em forma de ‚ÄúL‚Äù, quer dizer, duas casas em sentido horizontal e mais uma na vertical ou vice-versa.");
         break;
     case "torre":
         console.log("A torre movimenta-se pela vertical ou horizontal, mas n√£o pode pular outras pe√ßas.");
         break;
     case "pe√£o":
         console.log("O pe√£o movimenta-se apenas uma casa para frente e somente captura outras pe√ßas na diagonal. Opcionalmente, cada pe√£o pode avan√ßar duas casas no seu primeiro movimento do jogo.");
         break;
     default:
         console.log("Pe√ßa inv√°lida.")
 }

// Exerc√≠cio 07 - Utilize if/else para escrever um c√≥digo que converta uma nota dada em porcentagem (de 0 a 100) em conceitos de A a F. Siga essas regras:

// Porcentagem >= 90 -> A

// Porcentagem >= 80 -> B

// Porcentagem >= 70 -> C

// Porcentagem >= 60 -> D

// Porcentagem >= 50 -> E

// Porcentagem < 50 -> F

// O c√≥digo deve retornar uma mensagem de erro e encerrar se a nota passada for menor que 0 ou maior que 100.

// C√≥digo:

 const nota = 1;

 if (nota < 0 || nota > 100) {
     console.log("Nota inv√°lida, insira uma nota de 0 a 100.");
 } else if (nota >= 90) {
     console.log("A");
 } else if (nota >= 80) {
     console.log("B");
 } else if (nota >= 70) {
     console.log("C");
 } else if (nota >= 60) {
     console.log("D");
 } else if (nota >= 50) {
     console.log("E");
 } else {
     console.log("F");
 }

// Exerc√≠cio 08 - Utilize if/else para escrever um c√≥digo que defina tr√™s n√∫meros em constantes e retorne true se pelo menos uma das tr√™s for par. Caso contr√°rio, ele deve retornar false.
// Bonus: use somente um if.

// C√≥digo:

 const number1 = 13;
 const number2 = 15;
 const number3 = 12;

 let isEven = false;

 if(number1 % 2 === 0 || number2 % 2 === 0 || number3 % 2 === 0) {
     isEven = true;
 }
 console.log(isEven);

// Exerc√≠cio 09 - Utilize if/else para escrever um c√≥digo que defina tr√™s n√∫meros em constantes e retorne true se pelo menos uma das tr√™s for √≠mpar. Caso contr√°rio, ele deve retornar false.
// Bonus: use somente um if.

// C√≥digo:

 const number1 = 10;
 const number2 = 13;
 const number3 = 12;

 let isOdd = false;

 if(number1 % 2 !== 0 || number2 % 2 !== 0 || number3 % 2 !== 0) {
     isOdd = true;
 }
 console.log(isOdd);

// Exerc√≠cio 10 - Utilize if/else para escrever um c√≥digo que se inicie com dois valores em duas constantes diferentes: o custo de um produto e seu valor de venda. A partir dos valores, calcule quanto de lucro (valor de venda, descontado o custo do produto) a empresa ter√° ao vender mil desses produtos.
// Atente que, sobre o custo do produto, incide um imposto de 20%.

// Seu c√≥digo tamb√©m deve emitir uma mensagem de erro e encerrar caso algum dos seus valores de entrada seja menor que zero.

// O lucro de um produto √© o resultado da subtra√ß√£o do valor de venda pelo custo do mesmo, sendo que o imposto de 20% tamb√©m faz parte do valor de custo.

// valorCustoTotal = valorCusto + impostoSobreOCusto;
// lucro = valorVenda - valorCustoTotal (lucro de um produto);

// C√≥digo:

 const costOfProduct = 2;
 const saleValue = 5;

 if (costOfProduct >= 0 && saleValue >= 0) {
     const totalCostOfProduct = costOfProduct * 1.2;
     const totalProfit = (saleValue - totalCostOfProduct) * 1000;
     console.log(totalProfit);
 } else {
     console.log("Erro, os valores n√£o podem ser negativos.")
 }

// Exerc√≠cio 11 - Utilize if/else para escrever um c√≥digo que, dado um sal√°rio bruto, calcule o l√≠quido a ser recebido.
// Uma pessoa que trabalha de carteira assinada no Brasil tem descontados de seu sal√°rio bruto o INSS e o IR.

// A nota√ß√£o para um sal√°rio de R$1500,10, por exemplo, deve ser 1500.10. Para as faixas de impostos, use as seguintes refer√™ncias:

// INSS (Instituto Nacional do Seguro Social)

// Sal√°rio bruto at√© R$ 1.556,94: al√≠quota de 8%

// Sal√°rio bruto de R$ 1.556,95 a R$ 2.594,92: al√≠quota de 9%

// Sal√°rio bruto de R$ 2.594,93 a R$ 5.189,82: al√≠quota de 11%

// Sal√°rio bruto acima de R$ 5.189,82: al√≠quota m√°xima de R$ 570,88

// IR (Imposto de Renda)

// At√© R$ 1.903,98: isento de imposto de renda

// De R$ 1.903,99 a 2.826,65: al√≠quota de 7,5% e parcela de R$ 142,80 a deduzir do imposto

// De R$ 2.826,66 a R$ 3.751,05: al√≠quota de 15% e parcela de R$ 354,80 a deduzir do imposto

// De R$ 3.751,06 a R$ 4.664,68: al√≠quota de 22,5% e parcela de R$ 636,13 a deduzir do imposto

// Acima de R$ 4.664,68: al√≠quota de 27,5% e parcela de R$ 869,36 a deduzir do imposto.

// Exemplo: Uma pessoa possui o sal√°rio bruto de R$ 3.000,00. O c√°lculo ser√°:

// O sal√°rio bruto est√° entre R$ 2.594,93 e R$ 5.189,82, ent√£o sua al√≠quota para INSS √© de 11%. O INSS ser√° 11% de R$ 3.000, ou seja, R$ 330,00.

// Para descobrir o sal√°rio-base, subtraia do sal√°rio bruto a al√≠quota do INSS: R$ 3.000,00 - R$ 330,00 = R$ 2.670,00.

// Para pegar o valor do IR, temos um sal√°rio (j√° deduzido o INSS) entre R$ 1.903,99 e 2.826,65, sendo a al√≠quota, ent√£o, de 7.5%, com parcela de R$ 142,80 a deduzir do imposto. Assim, temos:

// R$ 2.670,00: sal√°rio com INSS j√° deduzido;
// 7.5%: al√≠quota de imposto de renda;
// R$ 142,80 parcela a se deduzir do imposto.
// Fazendo a conta, temos: (7,5% de R$ 2.670,00) - R$ 142,80 = R$ 57,45

// O √∫ltimo c√°lculo para conseguir o sal√°rio l√≠quido √© R$ 2.670,00 - R$ 57,45 (sal√°rio-base - valor IR) = R$ 2.612,55.

// Resultado: R$ 2.612,55.

// C√≥digo:

let aliquotINSS;
let aliquotIR;
let grossSalary = 2000;

if (grossSalary <= 1556.94) {
    aliquotINSS = grossSalary * 0.08;
}
else if (grossSalary <= 2594.92) {
    aliquotINSS = grossSalary * 0.09;
}
else if (grossSalary <= 5189.82) {
    aliquotINSS = grossSalary * 0.11;
}
else {
    aliquotINSS = 570.88
}

const baseSalary = grossSalary - aliquotINSS;

if (baseSalary <= 1903.98) {
    aliquotIR = 0;
}
else if (baseSalary <= 2826.65) {
    aliquotIR = (baseSalary * 0.075) - 142.80;
}
else if (baseSalary <= 3751.05) {
    aliquotIR = (baseSalary * 0.15) - 354.80;
}
else if (baseSalary <= 4664.68) {
    aliquotIR = (baseSalary * 0.225) - 636.13;
}
else {
    aliquotIR = (baseSalary * 0.275) - 869.36;
}

const liquidSalary = baseSalary - aliquotIR;

console.log("Sal√°rio de = " + liquidSalary);